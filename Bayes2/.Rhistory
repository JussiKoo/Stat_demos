mobilephonedata <- read.csv("mobile_phone_purchases.csv", sep=';') |>
select(
Ika,
Sukup,
nyk_hankintavuosi = Q43,
nyk_hankintakuukausi = Q44,
nyk_hankintavuodenaika  = Q45,
ent_hankintavuosi = Q48,
ent_hankintakuukausi = Q49,
ent_hankintavuodenaika  = Q50,
)
#Vaikeat tapaukset: Jotkut ei osaa sanoa milloin nykyinen on ostettu eivätkä
#osaa sanoa milloin edellinen on ostettu. Minimi syntymävuoden alaraja?
#Yläraja?? Vai pudotetaanko nämä pois koska varmaan aika harvassa?
#Menettely:
#1: Jos vuosi ja kuukausi on ilmoitettu luotetaan niihin.
#2: Jos vuosi ja vuodenaika, mutta kuukautta ei ole
#ilmoitettu menettely kvartaalin mukaan.
#3 Jos vuotta ei ilmoitettu oletetaan, että henkilö on ostanut puhelimensa
#aikaisintaa 16 v. ikäisenä
mobilephonedata$nyk_min_hankintakuukausi <- rep(NA, nrow(mobilephonedata))
for (i in 1:nrow(mobilephonedata)) {
if (mobilephonedata$nyk_hankintakuukausi[i] != 13)
mobilephonedata$nyk_min_hankintakuukausi[i] <- mobilephonedata$nyk_hankintakuukausi[i]-1
else if (mobilephonedata$nyk_hankintavuodenaika[i] != 5)
mobilephonedata$nyk_min_hankintakuukausi[i] <- (mobilephonedata$nyk_hankintavuodenaika[i]-1)*3
else
mobilephonedata$nyk_min_hankintakuukausi[i] <- 0
}
mobilephonedata$nyk_max_hankintakuukausi <- rep(NA, nrow(mobilephonedata))
for (i in 1:nrow(mobilephonedata)) {
if (mobilephonedata$nyk_hankintakuukausi[i] != 13)
mobilephonedata$nyk_max_hankintakuukausi[i] <- mobilephonedata$nyk_hankintakuukausi[i]
else if (mobilephonedata$nyk_hankintavuodenaika[i] != 5)
mobilephonedata$nyk_max_hankintakuukausi[i] <- mobilephonedata$nyk_hankintavuodenaika[i]*3
else
mobilephonedata$nyk_max_hankintakuukausi[i] <- 12
}
mobilephonedata$nyk_min_hankintavuosi <- rep(NA, nrow(mobilephonedata))
for (i in 1:nrow(mobilephonedata)) {
if (mobilephonedata$nyk_hankintavuosi[i] != 9999)
mobilephonedata$nyk_min_hankintavuosi[i] <- mobilephonedata$nyk_hankintavuosi[i]
else if (mobilephonedata$ent_hankintavuosi[i] != 9999 && !is.na(mobilephonedata$ent_hankintavuosi[i]))
mobilephonedata$nyk_min_hankintavuosi[i] <- mobilephonedata$ent_hankintavuosi[i]
else mobilephonedata$nyk_min_hankintavuosi[i] <- 2000 #tätä voisi vielä säätää
}
mobilephonedata$nyk_max_hankintavuosi <- rep(NA, nrow(mobilephonedata))
for (i in 1:nrow(mobilephonedata)) {
if (mobilephonedata$nyk_hankintavuosi[i] != 9999)
mobilephonedata$nyk_max_hankintavuosi[i] <- mobilephonedata$nyk_hankintavuosi[i]
else mobilephonedata$nyk_max_hankintavuosi[i] <- 2012
}
mobilephonedata$nyk_min_aika_osto_tutkimus <-
(2012-mobilephonedata$nyk_max_hankintavuosi)*12
mobilephonedata <- read.csv("mobile_phone_purchases.csv", sep=';') |>
select(
Ika,
Sukup,
nyk_hankintavuosi = Q43,
nyk_hankintakuukausi = Q44,
nyk_hankintavuodenaika  = Q45,
ent_hankintavuosi = Q48,
ent_hankintakuukausi = Q49,
ent_hankintavuodenaika  = Q50,
)
#Vaikeat tapaukset: Jotkut ei osaa sanoa milloin nykyinen on ostettu eivätkä
#osaa sanoa milloin edellinen on ostettu. Minimi syntymävuoden alaraja?
#Yläraja?? Vai pudotetaanko nämä pois koska varmaan aika harvassa?
#Menettely:
#1: Jos vuosi ja kuukausi on ilmoitettu luotetaan niihin.
#2: Jos vuosi ja vuodenaika, mutta kuukautta ei ole
#ilmoitettu menettely kvartaalin mukaan.
#3 Jos vuotta ei ilmoitettu oletetaan, että henkilö on ostanut puhelimensa
#aikaisintaa 16 v. ikäisenä
mobilephonedata$nyk_min_hankintakuukausi <- rep(NA, nrow(mobilephonedata))
for (i in 1:nrow(mobilephonedata)) {
if (mobilephonedata$nyk_hankintakuukausi[i] != 13)
mobilephonedata$nyk_min_hankintakuukausi[i] <- mobilephonedata$nyk_hankintakuukausi[i]-1
else if (mobilephonedata$nyk_hankintavuodenaika[i] != 5)
mobilephonedata$nyk_min_hankintakuukausi[i] <- (mobilephonedata$nyk_hankintavuodenaika[i]-1)*3
else
mobilephonedata$nyk_min_hankintakuukausi[i] <- 0
}
mobilephonedata$nyk_max_hankintakuukausi <- rep(NA, nrow(mobilephonedata))
for (i in 1:nrow(mobilephonedata)) {
if (mobilephonedata$nyk_hankintakuukausi[i] != 13)
mobilephonedata$nyk_max_hankintakuukausi[i] <- mobilephonedata$nyk_hankintakuukausi[i]
else if (mobilephonedata$nyk_hankintavuodenaika[i] != 5)
mobilephonedata$nyk_max_hankintakuukausi[i] <- mobilephonedata$nyk_hankintavuodenaika[i]*3
else
mobilephonedata$nyk_max_hankintakuukausi[i] <- 12
}
mobilephonedata$nyk_min_hankintavuosi <- rep(NA, nrow(mobilephonedata))
for (i in 1:nrow(mobilephonedata)) {
if (mobilephonedata$nyk_hankintavuosi[i] != 9999)
mobilephonedata$nyk_min_hankintavuosi[i] <- mobilephonedata$nyk_hankintavuosi[i]
else if (mobilephonedata$ent_hankintavuosi[i] != 9999 && !is.na(mobilephonedata$ent_hankintavuosi[i]))
mobilephonedata$nyk_min_hankintavuosi[i] <- mobilephonedata$ent_hankintavuosi[i]
else mobilephonedata$nyk_min_hankintavuosi[i] <- 2000 #tätä voisi vielä säätää
}
mobilephonedata$nyk_max_hankintavuosi <- rep(NA, nrow(mobilephonedata))
for (i in 1:nrow(mobilephonedata)) {
if (mobilephonedata$nyk_hankintavuosi[i] != 9999)
mobilephonedata$nyk_max_hankintavuosi[i] <- mobilephonedata$nyk_hankintavuosi[i]
else mobilephonedata$nyk_max_hankintavuosi[i] <- 2012
}
#Esim jos henkilö on sanonut hankkineensa puhelimen helmikuussa 2009
#minkk=1 maxkk=2
#minimiaika = (2012-2009)*12 + (12-2) + 2
#(2012-2012)*12 + (12-2) + 2
#(2012-2013)*12 + (12-2) + 2
mobilephonedata$nyk_min_aika_osto_tutkimus <-
(2012-mobilephonedata$nyk_max_hankintavuosi)*12
+ (12-mobilephonedata$nyk_max_hankintakuukausi) + 2
mobilephonedata$nyk_min_aika_osto_tutkimus <- (2012-mobilephonedata$nyk_max_hankintavuosi)*12 + (12-mobilephonedata$nyk_max_hankintakuukausi) + 2
mobilephonedata$nyk_min_aika_osto_tutkimus <- (2012-mobilephonedata$nyk_max_hankintavuosi)*12
+ (12-mobilephonedata$nyk_max_hankintakuukausi) + 2
mobilephonedata$nyk_max_aika_osto_tutkimus <- (2012-mobilephonedata$nyk_min_hankintavuosi)*12 + (12-mobilephonedata$nyk_min_hankintakuukausi) + 2
sum(mobilephonedata$nyk_min_aika_osto_tutkimus >= mobilephonedata$nyk_max_aika_osto_tutkimus)
mobilephonedata <- read.csv("mobile_phone_purchases.csv", sep=';') |>
select(
Ika,
Sukup,
nyk_hankintavuosi = Q43,
nyk_hankintakuukausi = Q44,
nyk_hankintavuodenaika  = Q45,
ent_hankintavuosi = Q48,
ent_hankintakuukausi = Q49,
ent_hankintavuodenaika  = Q50,
)
#Vaikeat tapaukset: Jotkut ei osaa sanoa milloin nykyinen on ostettu eivätkä
#osaa sanoa milloin edellinen on ostettu. Minimi syntymävuoden alaraja?
#Yläraja?? Vai pudotetaanko nämä pois koska varmaan aika harvassa?
#Menettely:
#1: Jos vuosi ja kuukausi on ilmoitettu luotetaan niihin.
#2: Jos vuosi ja vuodenaika, mutta kuukautta ei ole
#ilmoitettu menettely kvartaalin mukaan.
#3 Jos vuotta ei ilmoitettu oletetaan, että henkilö on ostanut puhelimensa
#aikaisintaa 16 v. ikäisenä
mobilephonedata$nyk_min_hankintakuukausi <- rep(NA, nrow(mobilephonedata))
for (i in 1:nrow(mobilephonedata)) {
if (mobilephonedata$nyk_hankintakuukausi[i] != 13)
mobilephonedata$nyk_min_hankintakuukausi[i] <- mobilephonedata$nyk_hankintakuukausi[i]-1
else if (mobilephonedata$nyk_hankintavuodenaika[i] != 5)
mobilephonedata$nyk_min_hankintakuukausi[i] <- (mobilephonedata$nyk_hankintavuodenaika[i]-1)*3
else
mobilephonedata$nyk_min_hankintakuukausi[i] <- 0
}
mobilephonedata$nyk_max_hankintakuukausi <- rep(NA, nrow(mobilephonedata))
for (i in 1:nrow(mobilephonedata)) {
if (mobilephonedata$nyk_hankintakuukausi[i] != 13)
mobilephonedata$nyk_max_hankintakuukausi[i] <- mobilephonedata$nyk_hankintakuukausi[i]
else if (mobilephonedata$nyk_hankintavuodenaika[i] != 5)
mobilephonedata$nyk_max_hankintakuukausi[i] <- mobilephonedata$nyk_hankintavuodenaika[i]*3
else
mobilephonedata$nyk_max_hankintakuukausi[i] <- 12
}
mobilephonedata$nyk_min_hankintavuosi <- rep(NA, nrow(mobilephonedata))
for (i in 1:nrow(mobilephonedata)) {
if (mobilephonedata$nyk_hankintavuosi[i] != 9999)
mobilephonedata$nyk_min_hankintavuosi[i] <- mobilephonedata$nyk_hankintavuosi[i]
else if (mobilephonedata$ent_hankintavuosi[i] != 9999 && !is.na(mobilephonedata$ent_hankintavuosi[i]))
mobilephonedata$nyk_min_hankintavuosi[i] <- mobilephonedata$ent_hankintavuosi[i]
else mobilephonedata$nyk_min_hankintavuosi[i] <- 2000 #tätä voisi vielä säätää
}
mobilephonedata$nyk_max_hankintavuosi <- rep(NA, nrow(mobilephonedata))
for (i in 1:nrow(mobilephonedata)) {
if (mobilephonedata$nyk_hankintavuosi[i] != 9999)
mobilephonedata$nyk_max_hankintavuosi[i] <- mobilephonedata$nyk_hankintavuosi[i]
else mobilephonedata$nyk_max_hankintavuosi[i] <- 2012
}
#Esim jos henkilö on sanonut hankkineensa puhelimen helmikuussa 2009
#minkk=1 maxkk=2
#minimiaika = (2012-2009)*12 + (12-2) + 2
#(2012-2012)*12 + (12-2) + 2
#(2012-2013)*12 + (12-2) + 2
mobilephonedata$nyk_min_aika_osto_tutkimus <- (2012-mobilephonedata$nyk_max_hankintavuosi)*12 + (12-mobilephonedata$nyk_max_hankintakuukausi) + 2
mobilephonedata$nyk_max_aika_osto_tutkimus <- (2012-mobilephonedata$nyk_min_hankintavuosi)*12 + (12-mobilephonedata$nyk_min_hankintakuukausi) + 2
mobilephonedata <- read.csv("mobile_phone_purchases.csv", sep=';') |>
select(
Ika,
Sukup,
nyk_hankintavuosi = Q43,
nyk_hankintakuukausi = Q44,
nyk_hankintavuodenaika  = Q45,
ent_hankintavuosi = Q48,
ent_hankintakuukausi = Q49,
ent_hankintavuodenaika  = Q50,
)
#Vaikeat tapaukset: Jotkut ei osaa sanoa milloin nykyinen on ostettu eivätkä
#osaa sanoa milloin edellinen on ostettu. Minimi syntymävuoden alaraja?
#Yläraja?? Vai pudotetaanko nämä pois koska varmaan aika harvassa?
#Menettely:
#1: Jos vuosi ja kuukausi on ilmoitettu luotetaan niihin.
#2: Jos vuosi ja vuodenaika, mutta kuukautta ei ole
#ilmoitettu menettely kvartaalin mukaan.
#3 Jos vuotta ei ilmoitettu oletetaan, että henkilö on ostanut puhelimensa
#aikaisintaa 16 v. ikäisenä
mobilephonedata$nyk_min_hankintavuosi <- rep(NA, nrow(mobilephonedata))
for (i in 1:nrow(mobilephonedata)) {
if (mobilephonedata$nyk_hankintavuosi[i] != 9999)
mobilephonedata$nyk_min_hankintavuosi[i] <- mobilephonedata$nyk_hankintavuosi[i]
else if (mobilephonedata$ent_hankintavuosi[i] != 9999 && !is.na(mobilephonedata$ent_hankintavuosi[i]))
mobilephonedata$nyk_min_hankintavuosi[i] <- mobilephonedata$ent_hankintavuosi[i]
else mobilephonedata$nyk_min_hankintavuosi[i] <- 2000 #tätä voisi vielä säätää
}
mobilephonedata$nyk_max_hankintavuosi <- rep(NA, nrow(mobilephonedata))
for (i in 1:nrow(mobilephonedata)) {
if (mobilephonedata$nyk_hankintavuosi[i] != 9999)
mobilephonedata$nyk_max_hankintavuosi[i] <- mobilephonedata$nyk_hankintavuosi[i]
else mobilephonedata$nyk_max_hankintavuosi[i] <- 2012
}
mobilephonedata$nyk_min_hankintakuukausi <- rep(NA, nrow(mobilephonedata))
for (i in 1:nrow(mobilephonedata)) {
if (mobilephonedata$nyk_hankintakuukausi[i] != 13)
mobilephonedata$nyk_min_hankintakuukausi[i] <- mobilephonedata$nyk_hankintakuukausi[i]-1
else if (mobilephonedata$nyk_hankintavuodenaika[i] != 5)
mobilephonedata$nyk_min_hankintakuukausi[i] <- (mobilephonedata$nyk_hankintavuodenaika[i]-1)*3
else
mobilephonedata$nyk_min_hankintakuukausi[i] <- 0
}
mobilephonedata$nyk_max_hankintakuukausi <- rep(NA, nrow(mobilephonedata))
for (i in 1:nrow(mobilephonedata)) {
if (mobilephonedata$nyk_hankintakuukausi[i] != 13)
mobilephonedata$nyk_max_hankintakuukausi[i] <- mobilephonedata$nyk_hankintakuukausi[i]
else if (mobilephonedata$nyk_hankintavuodenaika[i] != 5) {
if (mobilephonedata$nyk_max_hankintavuosi[i] == 2013)
mobilephonedata$nyk_max_hankintakuukausi[i] <- 2
else mobilephonedata$nyk_max_hankintakuukausi[i] <- mobilephonedata$nyk_hankintavuodenaika[i]*3
}
else
mobilephonedata$nyk_max_hankintakuukausi[i] <- 12
}
#Esim jos henkilö on sanonut hankkineensa puhelimen helmikuussa 2009
#minkk=1 maxkk=2
#minimiaika = (2012-2009)*12 + (12-2) + 2
#(2012-2012)*12 + (12-2) + 2
#(2012-2013)*12 + (12-1) + 2
mobilephonedata$nyk_min_aika_osto_tutkimus <- (2012-mobilephonedata$nyk_max_hankintavuosi)*12 + (12-mobilephonedata$nyk_max_hankintakuukausi) + 2
mobilephonedata$nyk_max_aika_osto_tutkimus <- (2012-mobilephonedata$nyk_min_hankintavuosi)*12 + (12-mobilephonedata$nyk_min_hankintakuukausi) + 2
mobilephonedata$nyk_min_kayttoaika <- (2012-mobilephonedata$nyk_max_hankintavuosi)*12 + (12-mobilephonedata$nyk_max_hankintakuukausi) + 2
mobilephonedata$nyk_max_kayttoaika <- (2012-mobilephonedata$nyk_min_hankintavuosi)*12 + (12-mobilephonedata$nyk_min_hankintakuukausi) + 2
plot(density(mobilephonedata$nyk_min_kayttoaika))
hist(density(mobilephonedata$nyk_min_kayttoaika))
hist(mobilephonedata$nyk_min_kayttoaika)
library(ggplot2)
ggplot(data=mobilephonedata, mapping=aes(x=nyk_min_kayttoaika))+
geom_histogram()
ggplot(data=mobilephonedata, mapping=aes(x=nyk_min_kayttoaika))+
geom_histogram(binwidth=6)
ggplot(data=mobilephonedata, mapping=aes(x=nyk_min_kayttoaika))+
geom_histogram(binwidth=12)
ggplot(data=mobilephonedata, mapping=aes(x=nyk_min_kayttoaika))+
geom_histogram(binwidth=12)+
xlim(0)
ggplot(data=mobilephonedata, mapping=aes(x=nyk_min_kayttoaika))+
geom_histogram(binwidth=12)+
xlim(c(0,200))
ggplot(data=mobilephonedata, mapping=aes(x=nyk_min_kayttoaika))+
geom_histogram(binwidth=6)+
xlim(c(0,200))
ggplot(data=mobilephonedata, mapping=aes(x=nyk_min_kayttoaika))+
geom_density()+
xlim(c(0,200))
ggplot(data=mobilephonedata, mapping=aes(x=nyk_min_kayttoaika), col="blue")+
geom_density()+
xlim(c(0,200))
ggplot(data=mobilephonedata, mapping=aes(x=nyk_min_kayttoaika), color="blue")+
geom_density()+
xlim(c(0,200))
ggplot(data=mobilephonedata, mapping=aes(x=nyk_min_kayttoaika), colour="blue")+
geom_density()+
xlim(c(0,200))
ggplot(data=mobilephonedata, mapping=aes(x=nyk_min_kayttoaika, colour="blue"))+
geom_density()+
xlim(c(0,200))
ggplot(data=mobilephonedata, mapping=aes(x=nyk_min_kayttoaika, colour="red"))+
geom_density()+
xlim(c(0,200))
ggplot(data=mobilephonedata, mapping=aes(x=nyk_min_kayttoaika, colour="red"))+
geom_density()+
geom_density(mapping=aes(x=nyk_max_kayttoaika, colour="blue"))+
xlim(c(0,200))
ggplot(data=mobilephonedata, mapping=aes(x=nyk_min_kayttoaika))+
geom_density(color="red")+
geom_density(mapping=aes(x=nyk_max_kayttoaika), color="blue")+
xlim(c(0,200))
sum(mobilephonedata$nyk_min_kayttoaika > mobilephonedata$nyk_max_kayttoaika)
ggplot(data=mobilephonedata, mapping=aes(x=nyk_min_kayttoaika))+
geom_density(color="red")+
geom_density(color="blue")+
xlim(c(0,200))
ggplot(data=mobilephonedata, mapping=aes(x=nyk_min_kayttoaika))+
geom_density(color="red")+
geom_density(mapping=aes(x=nyk_max_kayttoaika), color="blue")+
xlim(c(0,200))
ggplot(data=mobilephonedata, mapping=aes(x=nyk_min_kayttoaika))+
geom_density(color="red")+
geom_density(mapping=aes(x=nyk_max_kayttoaika), color="blue")+
xlim(c(0,200))+
xlab("Käyttöaika")
ggplot(data=mobilephonedata, mapping=aes(x=nyk_min_kayttoaika))+
geom_density(color="red", label="Min käyttöaika")+
geom_density(mapping=aes(x=nyk_max_kayttoaika), color="blue")+
xlim(c(0,200))+
xlab("Käyttöaika")+
legend()
ggplot(data=mobilephonedata, mapping=aes(x=nyk_min_kayttoaika, label="Min käyttöaika"))+
geom_density(color="red")+
geom_density(mapping=aes(x=nyk_max_kayttoaika), color="blue")+
xlim(c(0,200))+
xlab("Käyttöaika")+
legend
ggplot(data=mobilephonedata, mapping=aes(x=nyk_min_kayttoaika, label="Min käyttöaika"))+
geom_density(color="red")+
geom_density(mapping=aes(x=nyk_max_kayttoaika), color="blue")+
xlim(c(0,200))+
xlab("Käyttöaika")+
legend()
mean(mobilephonedata$nyk_min_kayttoaika)
mean(mobilephonedata$nyk_max_kayttoaika)
ggplot(data=mobilephonedata, mapping=aes(x=nyk_min_kayttoaika, label="Min käyttöaika"))+
geom_density(color="blue")+
geom_density(mapping=aes(x=nyk_max_kayttoaika), color="red")+
xlim(c(0,200))+
xlab("Käyttöaika")
summary(fit2)$summary
s <- summary(fit2)
s$summary
summary(fit2)
fit2 <- stan(
model_code = scode2,
data=list(
y=y,
n=length(y)
),
iter=4000
)
View(fit2)
y <- c(
3.24, 1.42, 6.83, 3.60, 4.30, 0.81, 2.83, 1.01, 3.23, 5.99, 2.70, 2.09,
4.88, 5.31, 0.44, 1.98, 0.19, 4.26, 2.39, 2.04, 1.29, 1.01, 2.57, 0.03
)
scode2 <-
"data {
int<lower=0> n;
real<lower=0> y[n];
}
parameters {
real<lower=0> theta;
}
model {
theta ~ inv_gamma(4, 3/2);
y ~ exponential(theta);
}
generated quantities{
real<lower=0> y_tilde = exponential_rng(theta);
}"
fit2 <- stan(
model_code = scode2,
data=list(
y=y,
n=length(y)
),
iter=4000
)
library(rstan)
y <- c(
3.24, 1.42, 6.83, 3.60, 4.30, 0.81, 2.83, 1.01, 3.23, 5.99, 2.70, 2.09,
4.88, 5.31, 0.44, 1.98, 0.19, 4.26, 2.39, 2.04, 1.29, 1.01, 2.57, 0.03
)
scode2 <-
"data {
int<lower=0> n;
real<lower=0> y[n];
}
parameters {
real<lower=0> theta;
}
model {
theta ~ inv_gamma(4, 3/2);
y ~ exponential(theta);
}
generated quantities{
real<lower=0> y_tilde = exponential_rng(theta);
}"
fit2 <- stan(
model_code = scode2,
data=list(
y=y,
n=length(y)
),
iter=4000
)
summary(fit2)
summary(fit2)$summary
fit2$summary
summary(fit2)$summary
mean(params2$y_tilde > 6)
params2 <- extract(fit2)
mean(params2$y_tilde > 6)
y <- c(
3.24, 1.42, NA, 3.60, 4.30, 0.81, 2.83, 1.01, 3.23, 5.99, 2.70, 2.09,
4.88, 5.31, 0.44, 1.98, 0.19, 4.26, 2.39, 2.04, 1.29, 1.01, 2.57, 0.03
)
max(y)
max(y, 2)
?max
max(y, TRUE)
max(y, ma.rm=TRUE)
max(y, ma.rm = FALSE)
max(y, ma.rm = TRUE)
max(y, na.rm = TRUE)
maxy <- (y, na.rm = TRUE)
max_y <- (y, na.rm = TRUE)
max_y <- (y, na.rm = TRUE)
max_y <- (y, na.rm = TRUE)
max_y <- max(y, na.rm = TRUE)
y[!is.na(y)]
y <- c(
3.24, 1.42, NA, 3.60, 4.30, 0.81, 2.83, 1.01, 3.23, 5.99, 2.70, 2.09,
4.88, 5.31, 0.44, 1.98, 0.19, 4.26, 2.39, 2.04, 1.29, 1.01, 2.57, 0.03
)
max_y <- max(y, na.rm = TRUE)
y <- c(
3.24, 1.42, NA, 3.60, 4.30, 0.81, 2.83, 1.01, 3.23, 5.99, 2.70, 2.09,
4.88, 5.31, 0.44, 1.98, 0.19, 4.26, 2.39, 2.04, 1.29, 1.01, 2.57, 0.03
)
y_obs <- y[!is.na(y)]
y_cens <- y[is.na(y)]
y_cens
scode3 <-
"data {
int<lower=0> N_obs;
int<lower=0> N_cens;
real y_obs[N_obs];
real<lower=max(y_obs)> U;
}
parameters {
real<lower=U> y_cens[N_cens];
real<lower=0> theta;
}
model {
y_obs ~ exponential(theta);
y_cens ~ exponential(theta);
}"
fit3 <- stan(
model_code = scode3,
data=list(
N_obs = length(y_obs),
N_cens = length(y_cens),
y_obs = y_obs,
U = max(y_obs)
),
iter = 4000
)
s <- summary(fit3)
s$summary
plot(fit1, pars=c("y_cens"), plotfun="hist")
plot(fit3, pars=c("y_cens"), plotfun="hist")
scode3 <-
"data {
int<lower=0> N_obs;
int<lower=0> N_cens;
real y_obs[N_obs];
real<lower=max(y_obs)> U;
}
parameters {
real<lower=U> y_cens[N_cens];
real<lower=0> theta;
}
model {
theta ~ inv_gamma(4, 3/2);
y_obs ~ exponential(theta);
y_cens ~ exponential(theta);
}"
fit3 <- stan(
model_code = scode3,
data=list(
N_obs = length(y_obs),
N_cens = length(y_cens),
y_obs = y_obs,
U = max(y_obs)
),
iter = 4000
)
s <- summary(fit3)
s$summary
plot(fit3, pars=c("theta"), plotfun="hist")
plot(fit3, pars=c("y_cens"), plotfun="hist")
plot(fit3, pars=c("theta"), plotfun="hist")
scode4 <-
"data {
int<lower=0> N;
int<lower=0> y[N];
}
parameters {
real<lower=0> theta[N];
real<lower=0> phi;
}
model {
theta ~ exponential(phi);
y ~ poisson(theta);
}"
fit4 <- stan(
model_code = scode4,
data=list(
N = length(y),
y=y
),
iter=4000
)
